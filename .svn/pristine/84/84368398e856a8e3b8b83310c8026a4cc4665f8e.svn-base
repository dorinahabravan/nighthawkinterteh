package com.iucosoft.nighthawk_interteh_service.entities;
// Generated 22-Jan-2022 16:56:06 by Hibernate Tools 4.3.1

import java.util.Date;
import java.util.Objects;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.springframework.format.annotation.DateTimeFormat;

/**
 * Payroll generated by hbm2java
 */
@Entity
@Table(name = "payroll",
        catalog = "nighthawk_interteh"
)
public class Payroll implements java.io.Serializable {

    private Integer idPayroll;
    private NWUser user;
    private String payrollName;
    private String payrollEmail;
    private Date payrollDateOfBirth;
    private String payrollAddress;

    public Payroll() {
    }

    public Payroll(Integer idPayroll, NWUser user, String payrollName, String payrollEmail, Date payrollDateOfBirth, String payrollAddress) {
        this.idPayroll = idPayroll;
        this.user = user;
        this.payrollName = payrollName;
        this.payrollEmail = payrollEmail;
        this.payrollDateOfBirth = payrollDateOfBirth;
        this.payrollAddress = payrollAddress;
    }

//     @GenericGenerator(name="generator", strategy="foreign", parameters=@Parameter(name="property", value="user"))@Id @GeneratedValue(generator="generator")
    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)

    @Column(name = "ID_Payroll", unique = true, nullable = false)
    public Integer getIdPayroll() {
        return this.idPayroll;
    }

    public void setIdPayroll(Integer idPayroll) {
        this.idPayroll = idPayroll;
    }

    @OneToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "ID_User", nullable = false)
    public NWUser getUser() {
        return this.user;
    }

    public void setUser(NWUser user) {
        this.user = user;
    }

    @Column(name = "Payroll_Name", length = 45)
    public String getPayrollName() {
        return this.payrollName;
    }

    public void setPayrollName(String payrollName) {
        this.payrollName = payrollName;
    }

    @Column(name = "Payroll_Email", length = 45)
    public String getPayrollEmail() {
        return this.payrollEmail;
    }

    public void setPayrollEmail(String payrollEmail) {
        this.payrollEmail = payrollEmail;
    }

    @DateTimeFormat(pattern = "yyyy-MM-dd")
    @Temporal(TemporalType.DATE)
    @Column(name = "Payroll_Date_Of_Birth", length = 10)
    public Date getPayrollDateOfBirth() {
        return this.payrollDateOfBirth;
    }

    public void setPayrollDateOfBirth(Date payrollDateOfBirth) {
        this.payrollDateOfBirth = payrollDateOfBirth;
    }

    @Column(name = "Payroll_Address", length = 45)
    public String getPayrollAddress() {
        return this.payrollAddress;
    }

    public void setPayrollAddress(String payrollAddress) {
        this.payrollAddress = payrollAddress;
    }

    @Override
    public int hashCode() {
        int hash = 7;
        hash = 71 * hash + Objects.hashCode(this.idPayroll);
        return hash;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final Payroll other = (Payroll) obj;
        if (!Objects.equals(this.idPayroll, other.idPayroll)) {
            return false;
        }
        return true;
    }
    
    

    @Override
    public String toString() {
        return "Payroll{" + "idPayroll=" + idPayroll + ", user=" + user + ", payrollName=" + payrollName + ", payrollEmail=" + payrollEmail + ", payrollDateOfBirth=" + payrollDateOfBirth + ", payrollAddress=" + payrollAddress + '}';
    }

}
