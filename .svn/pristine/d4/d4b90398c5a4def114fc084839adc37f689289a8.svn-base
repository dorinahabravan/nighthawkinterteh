package com.iucosoft.nighthawk_interteh_service.entities;
// Generated 22-Jan-2022 16:56:06 by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.Objects;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.springframework.format.annotation.DateTimeFormat;

/**
 * Subcontractor generated by hbm2java
 */
@Entity
@Table(name = "subcontractor",
        catalog = "nighthawk_interteh"
)
public class Subcontractor implements java.io.Serializable {

    private Integer idSubcontractor;
    private NWUser user;
    private String subcontractorName;
    private String subcontractorEmail;
    private Date subcontractorDateOfBirth;
    private String subcontractorAddress;
//     private Set<Contract> contracts = new HashSet<Contract>(0);
//     private Set<Person> persons = new HashSet<Person>(0);
//     private Set<Companysubcontractor> companysubcontractors = new HashSet<Companysubcontractor>(0);

    public Subcontractor() {
    }

    public Subcontractor(Integer idSubcontractor, NWUser user, String subcontractorName, String subcontractorEmail, Date subcontractorDateOfBirth, String subcontractorAddress) {
        this.idSubcontractor = idSubcontractor;
        this.user = user;
        this.subcontractorName = subcontractorName;
        this.subcontractorEmail = subcontractorEmail;
        this.subcontractorDateOfBirth = subcontractorDateOfBirth;
        this.subcontractorAddress = subcontractorAddress;
    }

    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)

    @Column(name = "ID_Subcontractor", unique = true, nullable = false)
    public Integer getIdSubcontractor() {
        return this.idSubcontractor;
    }

    public void setIdSubcontractor(Integer idSubcontractor) {
        this.idSubcontractor = idSubcontractor;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "User_Id", nullable = false)
    public NWUser getUser() {
        return this.user;
    }

    public void setUser(NWUser user) {
        this.user = user;
    }

    @Column(name = "Subcontractor_Name", length = 45)
    public String getSubcontractorName() {
        return this.subcontractorName;
    }

    public void setSubcontractorName(String subcontractorName) {
        this.subcontractorName = subcontractorName;
    }

    @Column(name = "Subcontractor_Email", length = 45)
    public String getSubcontractorEmail() {
        return this.subcontractorEmail;
    }

    public void setSubcontractorEmail(String subcontractorEmail) {
        this.subcontractorEmail = subcontractorEmail;
    }

   @DateTimeFormat(pattern = "yyyy-MM-dd")
    @Temporal(TemporalType.DATE)
    @Column(name = "Subcontractor_Date_Of_Birth", length = 10)
    public Date getSubcontractorDateOfBirth() {
        return this.subcontractorDateOfBirth;
    }

    public void setSubcontractorDateOfBirth(Date subcontractorDateOfBirth) {
        this.subcontractorDateOfBirth = subcontractorDateOfBirth;
    }

    @Column(name = "Subcontractor_Address", length = 45)
    public String getSubcontractorAddress() {
        return this.subcontractorAddress;
    }

    public void setSubcontractorAddress(String subcontractorAddress) {
        this.subcontractorAddress = subcontractorAddress;
    }

    @Override
    public int hashCode() {
        int hash = 7;
        hash = 37 * hash + Objects.hashCode(this.idSubcontractor);
        hash = 37 * hash + Objects.hashCode(this.subcontractorName);
        return hash;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final Subcontractor other = (Subcontractor) obj;
        if (!Objects.equals(this.subcontractorName, other.subcontractorName)) {
            return false;
        }
        if (!Objects.equals(this.idSubcontractor, other.idSubcontractor)) {
            return false;
        }
        return true;
    }
    

    @Override
    public String toString() {
        return "Subcontractor{" + "idSubcontractor=" + idSubcontractor + ", user=" + user + ", subcontractorName=" + subcontractorName + ", subcontractorEmail=" + subcontractorEmail + ", subcontractorDateOfBirth=" + subcontractorDateOfBirth + ", subcontractorAddress=" + subcontractorAddress + '}';
    }

}
