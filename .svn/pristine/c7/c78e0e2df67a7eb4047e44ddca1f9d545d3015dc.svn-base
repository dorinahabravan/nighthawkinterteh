package com.iucosoft.nighthawk_interteh_service.entities;
// Generated 22-Jan-2022 16:56:06 by Hibernate Tools 4.3.1

import java.util.HashSet;
import java.util.Objects;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * NWUser generated by hbm2java
 */
@Entity
@Table(name = "nwuser",
        catalog = "nighthawk_interteh",
        uniqueConstraints = {
            @UniqueConstraint(columnNames = "Username")
            , @UniqueConstraint(columnNames = "Password")}
)
public class NWUser implements java.io.Serializable {

    private Integer idUser;
    private NWRole role;
    private String username;
    private String password;
    private boolean active;
    private Set<NWUser> users = new HashSet<NWUser>(0);

    public NWUser() {
    }

    public NWUser(Integer idUser, NWRole role, String username, String password, boolean active, Set<NWUser> users ) {
        this.idUser = idUser;
        this.role = role;
        this.username = username;
        this.password = password;
        this.active = active;
        this.users=users;
    }

   
     @Id @GeneratedValue(strategy=GenerationType.IDENTITY)

    @Column(name = "ID_User", unique = true, nullable = false)
    public Integer getIdUser() {
        return this.idUser;
    }

    public void setIdUser(Integer idUser) {
        this.idUser = idUser;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "User_Role_ID", nullable = false)
    public NWRole getRole() {
        return this.role;
    }

    public void setRole(NWRole role) {
        this.role = role;
    }

    @Column(name = "Username", unique = true, nullable = false, length = 45)
    public String getUsername() {
        return this.username;
    }

    public void setUsername(String username) {
        this.username = username;
    }

    @Column(name = "Password", unique = true, nullable = false, length = 45)
    public String getPassword() {
        return this.password;
    }

    public void setPassword(String password) {
        this.password = password;
    }

@Column(name = "Active", nullable = false)
    public boolean isActive() {
        return active;
    }

    public void setActive(boolean active) {
        this.active = active;
    }
    
    
     @OneToMany(fetch = FetchType.EAGER, mappedBy = "role")
    public Set<NWUser> getUsers() {
        return this.users;
    }

    public void setUsers(Set<NWUser> users) {
        this.users = users;
    }

    @Override
    public int hashCode() {
        int hash = 3;
        hash = 89 * hash + Objects.hashCode(this.idUser);
        hash = 89 * hash + Objects.hashCode(this.username);
        hash = 89 * hash + (this.active ? 1 : 0);
        return hash;
    }

//    @Override
//    public String toString() {
//        return "NWUser{" + "idUser=" + idUser + ", role=" + role + ", username=" + username + ", password=" + password + ", active=" + active + ", users=" + users + '}';
//    }
    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final NWUser other = (NWUser) obj;
        if (this.active != other.active) {
            return false;
        }
        if (!Objects.equals(this.username, other.username)) {
            return false;
        }
        if (!Objects.equals(this.idUser, other.idUser)) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        return "NWUser{" + "idUser=" + idUser + ", username=" + username + ", active=" + active + '}';
    }

    

    
}
