package com.iucosoft.nighthawk_interteh_service.entities;
// Generated 22-Jan-2022 16:56:06 by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * Subcontractor generated by hbm2java
 */
@Entity
@Table(name="subcontractor"
    ,catalog="nighthawk_interteh"
)
public class Subcontractor  implements java.io.Serializable {


     private Integer idSubcontractor;
     private User user;
     private String subcontractorName;
     private String subcontractorEmail;
     private Date subcontractorDateOfBirth;
     private String subcontractorAddress;
     private Set<Contract> contracts = new HashSet<Contract>(0);
     private Set<Person> persons = new HashSet<Person>(0);
     private Set<Companysubcontractor> companysubcontractors = new HashSet<Companysubcontractor>(0);

    public Subcontractor() {
    }

	
    public Subcontractor(User user) {
        this.user = user;
    }
    public Subcontractor(User user, String subcontractorName, String subcontractorEmail, Date subcontractorDateOfBirth, String subcontractorAddress, Set<Contract> contracts, Set<Person> persons, Set<Companysubcontractor> companysubcontractors) {
       this.user = user;
       this.subcontractorName = subcontractorName;
       this.subcontractorEmail = subcontractorEmail;
       this.subcontractorDateOfBirth = subcontractorDateOfBirth;
       this.subcontractorAddress = subcontractorAddress;
       this.contracts = contracts;
       this.persons = persons;
       this.companysubcontractors = companysubcontractors;
    }
   
     @GenericGenerator(name="generator", strategy="foreign", parameters=@Parameter(name="property", value="user"))@Id @GeneratedValue(generator="generator")

    
    @Column(name="ID_Subcontractor", unique=true, nullable=false)
    public Integer getIdSubcontractor() {
        return this.idSubcontractor;
    }
    
    public void setIdSubcontractor(Integer idSubcontractor) {
        this.idSubcontractor = idSubcontractor;
    }

@OneToOne(fetch=FetchType.LAZY)@PrimaryKeyJoinColumn
    public User getUser() {
        return this.user;
    }
    
    public void setUser(User user) {
        this.user = user;
    }

    
    @Column(name="Subcontractor_Name", length=45)
    public String getSubcontractorName() {
        return this.subcontractorName;
    }
    
    public void setSubcontractorName(String subcontractorName) {
        this.subcontractorName = subcontractorName;
    }

    
    @Column(name="Subcontractor_Email", length=45)
    public String getSubcontractorEmail() {
        return this.subcontractorEmail;
    }
    
    public void setSubcontractorEmail(String subcontractorEmail) {
        this.subcontractorEmail = subcontractorEmail;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="Subcontractor_Date_Of_Birth", length=10)
    public Date getSubcontractorDateOfBirth() {
        return this.subcontractorDateOfBirth;
    }
    
    public void setSubcontractorDateOfBirth(Date subcontractorDateOfBirth) {
        this.subcontractorDateOfBirth = subcontractorDateOfBirth;
    }

    
    @Column(name="Subcontractor_Address", length=45)
    public String getSubcontractorAddress() {
        return this.subcontractorAddress;
    }
    
    public void setSubcontractorAddress(String subcontractorAddress) {
        this.subcontractorAddress = subcontractorAddress;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="subcontractor")
    public Set<Contract> getContracts() {
        return this.contracts;
    }
    
    public void setContracts(Set<Contract> contracts) {
        this.contracts = contracts;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="subcontractor")
    public Set<Person> getPersons() {
        return this.persons;
    }
    
    public void setPersons(Set<Person> persons) {
        this.persons = persons;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="subcontractor")
    public Set<Companysubcontractor> getCompanysubcontractors() {
        return this.companysubcontractors;
    }
    
    public void setCompanysubcontractors(Set<Companysubcontractor> companysubcontractors) {
        this.companysubcontractors = companysubcontractors;
    }




}


