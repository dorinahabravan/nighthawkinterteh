package com.iucosoft.nighthawk_interteh_service.entities;
// Generated 22-Jan-2022 16:56:06 by Hibernate Tools 4.3.1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * User generated by hbm2java
 */
@Entity
@Table(name = "user",
         catalog = "nighthawk_interteh",
         uniqueConstraints = {
            @UniqueConstraint(columnNames = "Username")
            , @UniqueConstraint(columnNames = "Password")}
)
public class User implements java.io.Serializable {

    private Integer idUser;
    private NWRole role;
    private String username;
    private String password;
    private Subcontractor subcontractor;
    private Set<Account> accounts = new HashSet<Account>(0);
    private Administrator administrator;
    private Payroll payroll;
    private boolean active;

    public User() {
    }

    public User(NWRole role, String username, String password) {
        this.role = role;
        this.username = username;
        this.password = password;
    }

    public User(NWRole role, String username, String password, Subcontractor subcontractor, Set<Account> accounts, Administrator administrator, Payroll payroll) {
        this.role = role;
        this.username = username;
        this.password = password;
        this.subcontractor = subcontractor;
        this.accounts = accounts;
        this.administrator = administrator;
        this.payroll = payroll;
    }

    public User(Integer idUser, NWRole role, String username, String password, Subcontractor subcontractor, Administrator administrator, Payroll payroll, boolean active) {
        this.idUser = idUser;
        this.role = role;
        this.username = username;
        this.password = password;
        this.subcontractor = subcontractor;
        this.administrator = administrator;
        this.payroll = payroll;
        this.active = active;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)

    @Column(name = "ID_User", unique = true, nullable = false)
    public Integer getIdUser() {
        return this.idUser;
    }

    public void setIdUser(Integer idUser) {
        this.idUser = idUser;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "User_Role_ID", nullable = false)
    public NWRole getRole() {
        return this.role;
    }

    public void setRole(NWRole role) {
        this.role = role;
    }

    @Column(name = "Username", unique = true, nullable = false, length = 45)
    public String getUsername() {
        return this.username;
    }

    public void setUsername(String username) {
        this.username = username;
    }

    @Column(name = "Password", unique = true, nullable = false, length = 45)
    public String getPassword() {
        return this.password;
    }

    public void setPassword(String password) {
        this.password = password;
    }

    @OneToOne(fetch = FetchType.LAZY, mappedBy = "user")
    public Subcontractor getSubcontractor() {
        return this.subcontractor;
    }

    public void setSubcontractor(Subcontractor subcontractor) {
        this.subcontractor = subcontractor;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
    public Set<Account> getAccounts() {
        return this.accounts;
    }

    public void setAccounts(Set<Account> accounts) {
        this.accounts = accounts;
    }

    @OneToOne(fetch = FetchType.EAGER, mappedBy = "user")
    public Administrator getAdministrator() {
        return this.administrator;
    }

    public void setAdministrator(Administrator administrator) {
        this.administrator = administrator;
    }

    @OneToOne(fetch = FetchType.LAZY, mappedBy = "user")
    public Payroll getPayroll() {
        return this.payroll;
    }

    public void setPayroll(Payroll payroll) {
        this.payroll = payroll;
    }

    public boolean isActive() {
        return active;
    }

    public void setActive(boolean active) {
        this.active = active;
    }

    @Override
    public String toString() {
        return "User{" + "idUser=" + idUser + ", role=" + role + ", username=" + username + ", password=" + password + ", active=" + active + '}';
    }

}
