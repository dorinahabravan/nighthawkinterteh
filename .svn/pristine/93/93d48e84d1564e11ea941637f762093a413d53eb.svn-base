package com.iucosoft.nighthawk_interteh_web_cms.springmvc.webcontrolleri.admin;

import com.iucosoft.nighthawk_interteh_service.entities.Administrator;
import com.iucosoft.nighthawk_interteh_service.entities.User;
import com.iucosoft.nighthawk_interteh_service.serviciispring.concrete.intf.AdministratorServiceIntf;
import com.iucosoft.nighthawk_interteh_service.serviciispring.concrete.intf.UserServiceIntf;
import java.util.List;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.servlet.ModelAndView;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

/**
 * Se ocupa de editarea listei si dateor administratorilor.CRUD pentru
 * Administrator
 *
 * @author Dorina
 */
@Controller
@RequestMapping("/admin/personaldetails")
public class PersonalDetailsController {

    private final Logger logger = LoggerFactory.getLogger(PersonalDetailsController.class);

    @Autowired
    AdministratorServiceIntf administratorService;
    @Autowired
    UserServiceIntf userService;

    
    /**
     * Show PersonalDetails
     *
     */
    @RequestMapping(value = "/list", method = RequestMethod.GET)
    ModelAndView list() {

        ModelAndView mv = new ModelAndView("admin.personaldetails.list.def");
        try {
            List<Administrator> lista = administratorService.list();
            for (Administrator administrator : lista) {
                System.out.println(administrator);

            }

            mv.addObject("lista", lista);

        } catch (Exception e) {
            e.printStackTrace();

        }
        return mv;
    }

    /**
     * Show PersonalDetails
     */
    @RequestMapping(value = "/showView/{idAdministrator}", method = RequestMethod.GET)
    String showView(@PathVariable("idAdministrator") int idAdministrator, Model model) {
        logger.debug("showView() idAdministrator: {}", idAdministrator);

        Administrator admin = administratorService.findById(idAdministrator);
        if (admin == null) {
            model.addAttribute("css", "danger");
            model.addAttribute("msg", "Administrator not found");

        }
        model.addAttribute("admin", admin);

        return "admin.personaldetails.showView.def";
    }

    /**
     *
     * Add PersonalDetails
     */
    @RequestMapping(value = "/showEdit/{idAdministrator}", method = RequestMethod.GET)
    String showEdit(@PathVariable("idAdministrator") int idAdministrator, Model model) {
        logger.debug("showEdit() idAdministrator: {}", idAdministrator);
        Administrator admin = null;
        if (idAdministrator == 0) {
            admin = new Administrator();
            admin.setAdministratorName("Dorina");
            admin.setAdministratorEmail("test@gmail.com");
            User  user = userService.findById(1);//Doar User cu id 1 poate fi administrator.
            admin.setUser(user);

        } else {
            admin = administratorService.findById(idAdministrator);
        }

        model.addAttribute("admin", admin);

        return "admin.personaldetails.showEdit.def";
    }

    /**
     * Save or Update Personal Details *
     *
     *
     */
    @RequestMapping(value = "/saveOrUpdate", method = RequestMethod.POST)
    public String saveOrUpdate(@ModelAttribute("admin") Administrator admin, BindingResult result,
            Model model, final RedirectAttributes redirectAttributes) {

        logger.debug("saveOrUpdate() : {}", admin);

        administratorService.saveOrUpdate(admin);
        if (admin.getIdAdministrator() == 0) {

            redirectAttributes.addFlashAttribute("msg", "Admin added successfully!");
        } else {
            redirectAttributes.addFlashAttribute("msg", "Admin updated successfully!");
        }

        return "redirect:/admin/personaldetails/list";

    }

    /**
     *
     * Update PersonalDetails
     */
//    @RequestMapping(value = "/edit/{idAdministrator}", method = RequestMethod.GET)
//    String edit(@PathVariable("idAdministrator") int idAdministrator, Model model) {
//        logger.debug("edit() idAdministrator: {}", idAdministrator);
//
//        Administrator admin = administratorService.findById(idAdministrator);
//        if (admin == null) {
//            model.addAttribute("css", "danger");
//            model.addAttribute("msg", "Administrator not found");
//
//        }
//        model.addAttribute("admin", admin);
//
//        return "admin.personaldetails.edit.def";
//    }
    /**
     *
     * Delete PersonalDetails
     */
//    @RequestMapping(value = "/delete/{idAdministrator}", method = RequestMethod.POST)
//    public String deleteUserAdmin(@PathVariable("idAdministrator") int idAdministrator, final RedirectAttributes redirectAttributes) {
//
//        logger.debug("deleteUserAdmin() : {}", idAdministrator);
//
//        Administrator admin = administratorService.findById(idAdministrator);
//        if (admin != null && admin.getIdAdministrator() != 1) {//Verificarea 2 tare atent ca sa nu stergi Super Admin.
//            administratorService.delete(idAdministrator);
//
//        }
//
//        redirectAttributes.addFlashAttribute("css", "success");
//        redirectAttributes.addFlashAttribute("msg", "Administrator is deleted!");
//
//        return "redirect:/admin/personaldetails/list";
//
//    }

    @RequestMapping(value = "/delete/{idAdministrator}", method = RequestMethod.POST)
    public String delete(@PathVariable("idAdministrator") int idAdministrator ,
            final RedirectAttributes redirectAttributes) {

        logger.debug("delete() : {}", idAdministrator);

        administratorService.delete(idAdministrator);
        
        return "redirect:/admin/personaldetails/list";

    }
}
